import re
from datetime import timedelta, datetime
import sys
import subprocess

log_name = sys.argv[1]
parameter = log_name.split("_")
print(parameter)
container_name = parameter[1] + "_" + parameter[2]
ext_ip = parameter[3]
mitm_log = container_name + "_" + ext_ip

ip_addresses = []
ip_address_pattern = re.compile(r'(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})')
with open(f'logs/{container_name}/{log_name}', 'r') as file:
    for line in file:
        if line.find("Threshold: 1, Attempts: 1") != -1:
            ip_addresses.append(ip_address_pattern.search(line)[0])
        if line.find("Valid credentials - Password Authentication") != -1:
            if (ip_address_pattern.search(prev_line) != None):
                ip_addresses.append(ip_address_pattern.search(prev_line)[0])
        prev_line = line

curr_ip_address = ip_addresses.pop()

with open(f'MITM/logs/logins/{mitm_log}', 'r') as file:
    for line in file:
        if line.find(curr_ip_address) != -1:
            login_info = line.split(';')
            session_info = login_info[2]

result = subprocess.run(["zcat", "/home/honey/MITM/logs/session_streams/2022_10_29_15_13_59_662.log.gz"], stdout=subprocess.PIPE, text=True)

end_time_found = False
start_time = ""
end_time = ""
if result.stdout.find(curr_ip_address) != -1:
    for line in result.stdout:
        if line.find("Attack Timestamp") != -1:
            start_line = line.find("Attack Timestamp")
            start_split = start_line.split()
            start_time = start_split(3)
        if line.find("Attack End Timestamp") != -1:
            end_line = line.find("Attack End Timestamp")
            end_split = line.split()
            end_time = end_split(4)
            end_time_found = True
    if not end_time_found:
        with open(f'MITM/logs/logouts/{mitm_log}', 'r') as file:
            for line in file:
                if line.find(curr_ip_address) != -1:
                    end_time = line.split(';')[0]

# use start time and end_time variables to find the time the attacker was in the container and output it to the corresponding file
end_values = datetime.strptime(end_time, "%H:%M:%S")
start_values = datetime.strptime(start_time, "%H:%M:%S")
total_time = end_values - start_valuesend_time_found = False
if result.stdout.find(curr_ip_address) != -1:
    for line in result.stdout.split('\n'):
        if line.find("Attack Timestamp") != -1:
            start_time = line.split()[1]
        if line.find("Attack End Timestamp") != -1:
            end_time = line.split()[1]
            end_time_found = True
    if not end_time_found:
        with open(f'MITM/logs/logouts/{mitm_log}', 'r') as file:
            for line in file:
                if line.find(curr_ip_address) != -1:
                    end_time = line.split(';')[0]

attack_stream_start = False
attack_stream_end = False
commands = []
for line in result.stdout.split('\n'):
    if not attack_stream_start:
        if line.find("Attacker Stream Below") != -1:
            attack_stream_start = True
    if attack_stream_start and not attack_stream_end:
        if line.find("Output Below") != -1:
            attack_stream_end = True
        else:
            if line.find("Noninteractive") == -1:
                commands.append(line)

with open(f'data/{container_name}/commands/{curr_ip_address}.txt', 'w') as file:
    for line in commands:
        file.write(line + '\n')

# add zipping of files
